openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/faqihassyfa/Project3/1.0.0
info:
  description: This is a simple API
  version: "1.0.0"
  title: Simple Inventory API
  contact:
    email: you@your-company.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: Auth
    description: Authentication
  - name: Users
    description: User data management
  - name: Admins
    description: Admins data management
  - name: Clothes
    description: Clothes data management
  - name: Orders
    description: User data management
paths:
  /login:
    post:
      tags:
        - Auth
      summary: login user
      description: Login user bisa digunakan ketika user sudah registrasi
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestLogin'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  email: "mbacin@gmail.com",
                  password: "mbacin123"
                }
              userData2:
                description: "Example data  user 2"
                value: {
                  email: "vanilicahya@gmail.com",
                  password: "Cahya12"
                }
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseLoginSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value:
                    code: 200
                    message: Login Success
                    data:
                      token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJleHAiOjE2MzgzMjYxODAsInVzZXJJZCI6MSwidXNlcm5hbWUiOiJhZG1pbiJ9.AebFR-oQjUSOMez2ucDWkiMrS2eQIPmcYm5c71qZ_co
                      roles: user
                  
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    message: "Wrong username or password",
                  }
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message: "There is an error in internal server",
                  }
  /users:
    post:
      tags:
        - Users
      summary: Registration User
      description: Saat registrasi user harus input semua field
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestRegister'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  email: "mbacincin@gmail.com",
                  password: "mbacin123",
                  address: "Jln. Baru No.4, Jakarta - Indonesia",
                  phone: "08123247689",
                }
      responses:
        '200':
          description: Success
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success to insert data",
                  }
        '400':
          description: Bad Request
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    message: "Wrong input",
                  }
        '404':
          description: Data Not Found
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message: "Data not found",
                  }
        '500':
          description: Internal Server Error
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message: "There is an error in internal server",
                  }
    get:
      tags:
        - Users
      summary: for get User profile 
      description: Bisa diaplikasikan ketika user ingin melihat profilnya
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseGetUserSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value:
                    code: 200
                    message: success
                    data:
                     name: Cindy
                     email: mbacin@gmail.com
                     address: Jln. Baru No.4, Jakarta - Indonesia
                     phone: "08123247689"
                
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 404,
                    message: "Data not found",
                  }
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 500,
                    message: "There is an error in internal server",
                  }
    put:
      tags:
        - Users
      summary: for put User
      description: Bisa diaplikasikan ketika user ingin update profilnya & semua field tidak boleh kosong
      security:
        - JWTAuth: []    
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestUpdate'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                  name: "andri gunawan",
                  email: "andrigunawan@gmail.com",
                  address: "Jln. Baru No.4, Jakarta - Indonesia",
                  phone: "08123247689",
                }
      responses:
        '200':
          description: Success
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success to insert data",
                  }
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 400,
                    message: "Wrong Input",
                  }
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 404,
                    message: "Data Not Found",
                  }
        '500':
          description: Internal server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 500,
                    message: "Internal server Error",
                  }

    delete:
      tags:
        - Users
      summary: for delete User
      description: Bisa diaplikasikan ketika user ingin melihat profilnya
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success to delete",
                  }
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message: "Data Not Found",
                  }
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message: "Internal server Error",
                  }
  /admins:
    get:
      tags:
        - Admins
      description: Get All Clothes
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAllClothesSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success",
                    data: [{
                      id: 1,
                      name: "Black T-Shirt",
                      price: 150000,
                    },{
                      id: 2,
                      name: "Blue T-Shirt",
                      price: 150000,
                    }]
                  }
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message : "Data Not Found",
                  }
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message : "Data Not Found",
                  }  
    post:
      tags:
        - Admins
      description: Add new Clothes
      security:
        - JWTAuth: []
      requestBody:
            content:
              multipart/form-data:
                schema:
                  $ref: '#/components/schemas/requestClothes'
                examples:
                  bookData1:
                    description: "Example clothes input"
                    value: {
                        name: "Black T-Shirt",
                        price: 150000,
                        stock: 3,
                        image: "download1.jpg",
                        description: "This T-Shirt is for Men"
                        }
      responses:
        '200':
          description: Success
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success to insert clothes",
                  }
        '400':
          description: Bad Request
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    message: "Wrong input",
                  }
        '404':
          description: Data Not Found
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message: "Wrong input",
                  }  
        '500':
          description: Internal Server Error
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    message: "There is an error in internal server",
                  }
  /admins/{clothes_id}:  
    delete:
      tags:
        - Admins
      description: Delete Clothes by id clothes
      security:
        - JWTAuth: []
      parameters:
        - in: path
          name: clothes_id
          required: true
          schema:
            type: number
            example: 1
          description: ID Clothes  
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success delete data",
                  }
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    message: "Data not found",
                  } 
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    message: "There is an error in internal server",
                  }           
    put:
      tags:
        - Admins
      description: Update Clothes by id clothes
      security:
        - JWTAuth: []     
      parameters:
        - in: path
          name: clothes_id
          required: true
          schema:
            type: number
            example: 1
          description: clothes id
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/requestUpdateClothes'
            examples:
              userData1:
                description: "Example data  user 1"
                value: {
                        name: "Black T-Shirt",
                        price: 130000,
                        stock: 3,
                        image: "download2.jpg",
                        description: "T Shirt for men"
                        }
      responses:
        '200':
          description: Success Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success update data",
                  }
        '400':
          description: Failed Response
          content:
            application/json:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "Bad Request",
                  }     
  /admins/history:
    get:
      tags:
        - Admins
      description: Get All History Orders
      security:
        - JWTAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAllClothesSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success",
                    orders: [{
                      idorder: 1,
                      created_at: "2022/08/21",
                      totalprice: 150000,
                    },{
                      idorder: 1,
                      created_at: "2022/08/21",
                      price: 150000,
                    }]
                  }
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message : "Data Not Found",
                  }
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message : "Data Not Found",
                  }     
  /clothes:
    get:
      tags:
        - Clothes
      description: Get All Clothes Data
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/responseAllClothesSuccess'
              examples:
                responseData1:
                  description: response success 1
                  value:
                    code: 200
                    message: success
                    data:
                      - name: Black T-Shirt
                        price: 150000
                        foto: .jpg
                    
                      - name: Blue T-Shirt
                        price: 150000
                        foto: ".jpg"
                    
                
        '404':
          description: Data Not Found
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message : "Data Not Found",
                  }
        '500':
          description: Internal Server Error
          content:
            application/json:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message : "Data Not Found",
                  }
  /orders:
    post:
      tags:
        - Orders
      security:
        - JWTAuth: []
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#"
            example:
              summary:
                - productid: 1
                  foto: .jpg
                  name: Black T-Shirt
                  qty: 1
                  stock: 1
                  price: 150000
                - productid: 2
                  foto: .jpg
                  name: Red T-Shirt
                  qty: 1
                  stock: 1
                  price: 150000
                  
              payment:
                totalprice: 300000
                payment_method: BCA Transfer
                card_number: 1111-1111-1111-1111
                card_holder: Ibu yang punya toko
                  
                        
      responses:
        '200':
          description: Success
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response success 1
                  value: {
                    code: 200,
                    message: "success order",
                  }
        '400':
          description: Bad Request
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    message: "Wrong input",
                  }
        '404':
          description: Data Not Found
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message: "Data Not Found",
                  }  
        '500':
          description: Internal Server Error
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message: "There is an error in internal server",
                  }
    get:
      tags:
        - Orders
      security:
        - JWTAuth: []
   
      responses:
        '200':
          description: Success
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response success 1
                  value: 
                    code: 200
                    message: success order
                    orderid: 1
                    data:
                      - productid: 1
                        name: T-Shirt Army
                        qty: 1
                        price: 150000
                      - productid: 2
                        name: T-Shirt Red
                        qty: 1
                        price: 150000
                    totalprice: 300000

                  
                  
        '400':
          description: Bad Request
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 400,
                    message: "Wrong input",
                  }
        '404':
          description: Data Not Found
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 404,
                    message: "Data Not Found",
                  }  
        '500':
          description: Internal Server Error
          content:
            multipart/form-data:
              examples:
                responseData1:
                  description: response failed 1
                  value: {
                    code: 500,
                    message: "There is an error in internal server",
                  }

components:
  securitySchemes:
    JWTAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "use Token"
  schemas:
    requestLogin:
      type: object
      properties:
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1

    responseLoginSuccess:
      type: object
      properties: {
        
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }

    requestRegister:
      type: object
      properties:
        "name":
          type: string
          minLength: 1
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "address":
          type: string
          minLength: 1
        "phone":
          type: string
          minLength: 1


    responseGetUserSuccess:
      type: object
      properties: {
        
        "message": {
          type: string
        },
        "data":{
          type: object
        }
      }

    requestUpdate:
      type: object
      properties:
        "name":
          type: string
          minLength: 1
        "email":
          type: string
          minLength: 1
        "password":
          type: string
          minLength: 1
        "address":
          type: string
          minLength: 1
        "phone":
          type: string
          minLength: 1

    requestClothes:
      type: object
      properties:
        "name":
          type: string
          minLength: 1
        "price":
          type: number
          minLength: 1
        "stock":
          type: number
          minLength: 1
        "image":
          type: string
          minLength: 1
        "description":
          type: string
          minLength: 1

    responseAllClothesSuccess:
      type: object
      properties: {

        "message": {
          type: string
          },
          "data":{
            type: object
          }
      }


    requestUpdateClothes:
      type: object
      properties:
        "name":
          type: string
          minLength: 1
        "price":
          type: number
          minLength: 1
        "stock":
          type: number
          minLength: 1
        "image":
          type: string
          minLength: 1
        "description":
          type: string
          minLength: 1