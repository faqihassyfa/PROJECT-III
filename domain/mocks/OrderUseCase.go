// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	domain "PROJECT-III/domain"

	mock "github.com/stretchr/testify/mock"
)

// OrderUseCase is an autogenerated mock type for the OrderUseCase type
type OrderUseCase struct {
	mock.Mock
}

// CreateOrder provides a mock function with given fields: neworder, userid
func (_m *OrderUseCase) CreateOrder(neworder domain.Order, userid int) int {
	ret := _m.Called(neworder, userid)

	var r0 int
	if rf, ok := ret.Get(0).(func(domain.Order, int) int); ok {
		r0 = rf(neworder, userid)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewOrderUseCase interface {
	mock.TestingT
	Cleanup(func())
}

// NewOrderUseCase creates a new instance of OrderUseCase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOrderUseCase(t mockConstructorTestingTNewOrderUseCase) *OrderUseCase {
	mock := &OrderUseCase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
